cd path\to\your\folderCompress-Archive -Path foldername -DestinationPath mycode.zippackage com.example.freefireadventure;

import android.app.Activity;
import android.os.Bundle;
import android.view.Window;
import android.view.WindowManager;

public class GameActivity extends Activity {

    private GameView gameView;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        // Fullscreen mode
        requestWindowFeature(Window.FEATURE_NO_TITLE);
        getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,
                WindowManager.LayoutParams.FLAG_FULLSCREEN);

        gameView = new GameView(this);
        setContentView(gameView);
    }

    @Override
    protected void onPause() {
        super.onPause();
        gameView.pause();
    }

    @Override
    protected void onResume() {
        super.onResume();
        gameView.resume();
    }
}// Update game objects
private void update() {
    // Update player position and actions
    // Spawn and update enemies
    // Check for collisions
}

// Draw game objects
private void draw() {
    if (surfaceHolder.getSurface().isValid()) {
        Canvas canvas = surfaceHolder.lockCanvas();
        canvas.drawColor(Color.BLACK);
        // Draw player
        // Draw enemies
        surfaceHolder.unlockCanvasAndPost(canvas);
    }
}package com.example.freefireadventure;

import android.content.Context;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.graphics.Canvas;

public class Player {

    private Bitmap bitmap;
    private int x, y;

    public Player(Context context) {
        bitmap = BitmapFactory.decodeResource(context.getResources(), R.drawable.player);
        x = 100;
        y = 100;
    }

    public void draw(Canvas canvas) {
        canvas.drawBitmap(bitmap, x, y, null);
    }

    public void update() {
        // Update player position
    }
}
